{
	"info": {
		"_postman_id": "2d5fca9c-fc99-4861-bd30-13a8b283ddd2",
		"name": "architecture_task_5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get unathorised user profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration user 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"login\": \"{{login}}\",  \r\n    \"password\": \"{{password}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/register",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"login\": \"{{login}}\",  \r\n    \"password\": \"{{password}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/login",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile 1 (not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user profile 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"random_name\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
							"pm.collectionVariables.set(\"random_mail\", pm.variables.replaceIn('{{$randomEmail}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"name\": \"{{random_name}}\",  \r\n    \"mail\": \"{{random_mail}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/logout",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile 1 (unathorised)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration user 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"login\": \"{{login}}\",  \r\n    \"password\": \"{{password}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/register",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"login\": \"{{login}}\",  \r\n    \"password\": \"{{password}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/login",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile 2 (not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user profile 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"random_name\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
							"pm.collectionVariables.set(\"random_mail\", pm.variables.replaceIn('{{$randomEmail}}'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n    \"name\": \"{{random_name}}\",  \r\n    \"mail\": \"{{random_mail}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/users/me",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"[INFO] Request headers: \" + JSON.stringify(pm.request.headers)] = true;\r",
							"tests[\"[INFO] Request body: \" + pm.request.body] = true;\r",
							"tests[\"[INFO] Response headers: \" + JSON.stringify(pm.response.headers)] = true;\r",
							"tests[\"[INFO] Response body: \" + pm.response.body] = true;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}/logout",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "arch.homework"
		},
		{
			"key": "login",
			"value": "LOGIN"
		},
		{
			"key": "password",
			"value": "PASSWORD"
		},
		{
			"key": "name",
			"value": "username"
		},
		{
			"key": "mail",
			"value": "test@gmail.com"
		}
	]
}